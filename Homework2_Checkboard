% Homework 2: Generating and testing complex white Gaussian images.
% Problem:4
% Ping-Ju Lin
% Dates: 02/20/2019
function Homework2_checkboard
 
% Setting the color as gray
colormap(gray(256));
 
% Create images of disks using three distance measures
N=256; % Number of rows and columns;
R=50; % Number of radius
 
f8 = zeros(N); % create 256*256 blank image by Checkerboard Eq
for m = 1:N
    % m1 is a variable having positive and negative values
    if (m > N/2)
        m1 = m-1-N;
    else
        m1 = m-1;
    end
    for n = 1:N
        % n1 is a variable having positive and negative values
        if (n > N/2) 
            n1 = n-1-N;
        else
            n1 = n-1;
        end
        % Calculate Checkerboard distance from the origin
        dist8 = max(abs(m1), abs(n1));
        % If pixel is within a disk of radius 50, then color it white
        if (dist8 < R)
            f8(m,n) = 255;
        end
    end
end
% Show the image after scaler (Checkerboard)
imagesc(f8);
title('Checkerboard');
pause;

% Apply 2-D FFT on Checkerboard
Z = fft2(f8);

% Display real part of FFT
imagesc(real(Z));
title('real Checkerboard');
pause;

% Display image part of FFT
imagesc(imag(Z));
title('image Checkerboard');
pause;

% Display magnitude of FFT
imagesc(abs(Z));
title('absoulte Checkerboard');
pause;

% Display phase angle of FFT
imagesc(angle(Z));
title('phase angle Checkerboard');
pause;

end
